//
//  LoginSceneTests.swift
//  SampleVIPSwift
//
//  Created by Andrei Popilian on 24/11/2019.
//  Copyright (c) 2019 Andrei Popilian. All rights reserved.
//
//  This file was generated by the VIP Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import XCTest
@testable import SampleVIPSwift

struct LoginInjectorTest {
  static let shared: LoginInjectorTest = LoginInjectorTest()
  private init() {}
}

//use the factory Dependency injection and implement the factorable protocol
extension LoginInjectorTest: LoginFactorable, LoginServicesFactorable {
  
  func makeRouter(viewController: UIViewController?) -> LoginRouting {
    var router = LoginRouter(viewController)
    //custom implementation for this test
    return router
  }
  
}

class LoginSceneTests: XCTestCase {
  
  var vc: LoginViewController!
  var customDataSource: LoginModel.DataSource!
  
  override func setUp() {
    
    customDataSource = LoginModel.DataSource()
    let customView = LoginView()
    
    vc = LoginViewController(factory: LoginInjectorTest.shared, mainView: customView, dataSource: customDataSource)
  }
  
  override func tearDown() { }
  
  func testCustomInteractorDataSourceShouldChange() {
    
    XCTAssertTrue(customDataSource.userId == nil, "UserId should be nil at this time")
    
    vc.doAuthentication()
    
    
    DispatchQueue.main.asyncAfter(deadline: .now() + 2, execute:  {
      
      let currentDataSource = self.vc.getCurrentDataSource()
      
      XCTAssertTrue(currentDataSource.userId == "88f48f34jf3498fnvb", "UserId should be 88f48f34jf3498fnvb After authentication")
    })
  }
}
